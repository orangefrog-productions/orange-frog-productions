---
import { Image } from "astro:assets";
import Wrapper from "../shared/Wrapper.astro";
import Headline from "../shared/Headline.astro";
import ribbonSrc from "./assets/ribbon.png";
import "./process.scss";
---

<div id="our-process" class="process">
  <Wrapper classes="process-wrapper">
    <div class="process-title">
      <Headline ele="h2" hlstyle="two">{Astro.props.data.title}</Headline>
    </div>
    <div class="process-intro" set:html={Astro.props.data.intro} />
    <div class="process-steps">
      {
        Astro.props.data.steps.map((step, index) => {
          return (
            <div class="process-steps-step">
              <Image
                src={step.step.sourceUrl}
                alt={step.step.altText}
                width="750"
                height="750"
              />
              {index > 0 && (
                <span class="process-steps-step-arrow">&rarr;</span>
              )}
            </div>
          );
        })
      }
    </div>
    <div class="process-outro" set:html={Astro.props.data.outro} />
  </Wrapper>
  <div class="process-ribbon">
    <Image src={ribbonSrc} alt="" width="2000" height="300" />
  </div>
</div>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";
  gsap.registerPlugin(ScrollTrigger);

  const triggerContainer = document.querySelector(".process-steps");
  const steps = document.querySelectorAll(".process-steps-step img");
  const stepsArrow = document.querySelectorAll(".process-steps-step-arrow");

  if (triggerContainer && steps) {
    gsap.fromTo(
      steps,
      { autoAlpha: 0, y: 100 },
      {
        duration: 1,
        autoAlpha: 1,
        y: 0,
        ease: "power2.out",
        scrollTrigger: {
          start: "top 30%",
          markers: false,
          trigger: triggerContainer,
        },
        stagger: {
          each: 0.5,
        },
      },
    );

    gsap.fromTo(
      stepsArrow,
      { autoAlpha: 0, scale: 4 },
      {
        transformOrigin: "center center",
        delay: 1.5,
        duration: 1,
        autoAlpha: 1,
        scale: 1,
        ease: "back.out(1.7)",
        scrollTrigger: {
          start: "top 30%",
          markers: false,
          trigger: triggerContainer,
        },
        stagger: {
          each: 0.5,
        },
      },
    );
  }
</script>
